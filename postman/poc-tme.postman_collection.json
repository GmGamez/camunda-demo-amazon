{
	"info": {
		"_postman_id": "b1697787-df69-4b0c-ad24-e02aab0dd183",
		"name": "poc-tme",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Damage Reports",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9000/api/damageReports",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"api",
						"damageReports"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Damage Reports by Started",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test response has a DamageKey\", function () {",
							"",
							"    var data = JSON.parse(responseBody);",
							"",
							"    // console.log(data)",
							"",
							"    //set the tasks into PM environment",
							"    pm.environment.set(\"damageKey\", data._embedded.damageReports[0].damageKey);",
							"    ",
							"    console.log( \"Response: DamageKey: \"",
							"                        +pm.environment.get(\"damageKey\") );",
							"    ",
							"    // pm.response.to.have.jsonBody(\"damageKey\"); ",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9000/api/damageReports/search/findDamageReportByStarted?started=false",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"api",
						"damageReports",
						"search",
						"findDamageReportByStarted"
					],
					"query": [
						{
							"key": "started",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Damage Report by Key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test response has a DamageKey\", function () {",
							"",
							"    var data = JSON.parse(responseBody);",
							"",
							"    // console.log(data)",
							"",
							"    //set the tasks into PM environment",
							"    pm.environment.set(\"damageKey\", data._embedded.damageReports[0].damageKey);",
							"    ",
							"    console.log( \"Response: DamageKey: \"",
							"                        +pm.environment.get(\"damageKey\") );",
							"    ",
							"    // pm.response.to.have.jsonBody(\"damageKey\"); ",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9000/api/damageReports/search/findDamageReportByDamageKey?damageKey={{damageKey}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"api",
						"damageReports",
						"search",
						"findDamageReportByDamageKey"
					],
					"query": [
						{
							"key": "damageKey",
							"value": "{{damageKey}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Damage Report",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"A valid response is reuturned\", () => {",
							"     pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Test response has a DamageKey\", function () {",
							"",
							"    var data = JSON.parse(responseBody);",
							"",
							"    // console.log(data)",
							"",
							"    //set the tasks into PM environment",
							"    pm.environment.set(\"damageKey\", data._embedded.damageReports[0].damageKey);",
							"    ",
							"    console.log( \"Response: DamageKey: \"",
							"                        +pm.environment.get(\"damageKey\") );",
							"    ",
							"    // pm.response.to.have.jsonBody(\"damageKey\"); ",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"damageKey\" : \"{{$guid}}\",\n    \"damageDate\": \"2021-10-19T00:00:00.000\",\n    \"started\": false,\n    \"approved\": false,\n    \"rejected\": false,\n    \"status\": null,\n    \"email\": \"paul.lungu@camunda.com\",\n    \"responsible\": true,\n    \"counterParty\": null,\n    \"damageType\": \"auto\",\n    \"timing\": \"before\",\n    \"licensePlate\": 1231231,\n    \"location\": \"Some corner\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9000/api/damageReports",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"api",
						"damageReports"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH Damage Report",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"Ragnar\"\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/damageReports/{{damageId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"damageReports",
						"{{damageId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Start Workflow Async",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"A valid response is reuturned\", () => {",
							"     pm.response.to.have.status(200);",
							"})",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"damageKey\" : \"{{damageKey}}\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9000/workflow/start/async",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"workflow",
						"start",
						"async"
					]
				}
			},
			"response": []
		},
		{
			"name": "start-damage-report-workflow",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"",
							"});",
							"",
							"pm.test(\"Test response has a businessKey\", function () {",
							"",
							"    var data = JSON.parse(responseBody);",
							"",
							"    //set the tasks into PM environment",
							"    pm.environment.set(\"businessKey\", data[0].processInstance.businessKey);",
							"    ",
							"    console.log( \"Response: BusinessKey: \"",
							"                        +pm.environment.get(\"businessKey\") );",
							"    ",
							"    pm.response.to.have.jsonBody(\"businessKey\"); ",
							"    ",
							"});",
							"",
							"pm.test(\"Test if response has ProcessId\", function () { ",
							"    ",
							"    var data = JSON.parse(pm.response.json());",
							"",
							"    console.log(` Response: Process Id =  ${data[0].processInstance.id}` );",
							"    ",
							"    pm.response.to.have.jsonBody(\"id\"); ",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"messageName\" : \"Message_damage-report\",\n  \"businessKey\" : \"5c9708ba-f254-452d-b0fb-a618697775ea\",\n  \"processVariables\": {\n       \"responsible\":{\n\t\t\t\"value\": true,\n            \"type\":\"Boolean\"\n        },\n       \"location\":{\n\t\t\t\"value\": \"Colorado\",\n            \"type\":\"String\"\n        },\n       \"severity\":{\n\t\t\t\"value\": \"high\",\n            \"type\":\"String\"\n        },\n       \"damageType\":{\n\t\t\t\"value\": \"auto\",\n            \"type\":\"String\"\n        },\n        \"agentGroup\":{\n\t\t\t\"value\": \"agent-group-0\",\n            \"type\":\"String\"\n        },\n       \"user\": {\n\t\t\t\"value\": \"{\\\"name\\\": \\\"Paul Lungu\\\",\\\"subject\\\": \\\"Test Email\\\", \\\"emailFrom\\\": \\\"paul.lungu@camunda.com\\\", \\\"emailTo\\\": \\\"paul.lungu@camunda.com\\\",\\\"emailBcc\\\": \\\"paul.lungu@camunda.com,paul.lungu@camunda.com,paul.lungu@camunda.com\\\", \\\"notificationType\\\": \\\"case-completion\\\", \\\"role\\\": \\\"service-owner\\\"}\",\n\t\t\t\"type\": \"Json\"\n        },\n        \"error\": \n        {\n\t\t\t\"value\": true,\n            \"type\":\"Boolean\"\n        }\n        \n    },\n    \"resultEnabled\": true,\n    \"variablesInResultEnabled\": true\n}"
				},
				"url": {
					"raw": "http://localhost:8081/engine-rest/message",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"engine-rest",
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "correlate-damage-report-workflow-wait-for-work",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"",
							"});",
							"",
							"pm.test(\"Test response has a businessKey\", function () {",
							"",
							"    var data = JSON.parse(responseBody);",
							"",
							"    //set the tasks into PM environment",
							"    pm.environment.set(\"businessKey\", data[0].processInstance.businessKey);",
							"    ",
							"    console.log( \"Response: BusinessKey: \"",
							"                        +pm.environment.get(\"businessKey\") );",
							"    ",
							"    pm.response.to.have.jsonBody(\"businessKey\"); ",
							"    ",
							"});",
							"",
							"pm.test(\"Test if response has ProcessId\", function () { ",
							"    ",
							"    var data = JSON.parse(pm.response.json());",
							"",
							"    console.log(` Response: Process Id =  ${data[0].processInstance.id}` );",
							"    ",
							"    pm.response.to.have.jsonBody(\"id\"); ",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"messageName\" : \"Message_work-order-validation\",\n  \"businessKey\" : \"\"\n}"
				},
				"url": {
					"raw": "http://localhost:8081/engine-rest/message",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"engine-rest",
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "salesforce oauth test",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "client_authentication",
							"value": "header",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "implicit",
							"type": "string"
						},
						{
							"key": "password",
							"value": "Budwe1ser0MJWiTaYkeotUS9jiP1pHY39",
							"type": "string"
						},
						{
							"key": "username",
							"value": "paullungu@camunda.com",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "https://login.force.com/services/oauth2/token",
							"type": "string"
						},
						{
							"key": "redirect_uri",
							"value": "https://www.getpostman.com/oauth2/callback",
							"type": "string"
						},
						{
							"key": "accessTokenUrl",
							"value": "https://camunda2-dev-ed.lightning.force.com/",
							"type": "string"
						},
						{
							"key": "scope",
							"value": "full",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "3MVG9p1Q1BCe9GmA2i4VM2yUSqOZwtXNI7EjJpLAE6YVLn5UCrtU5XOk0FPz6CzDAUMZuuLLwjaV.hYtyGTHp",
							"type": "string"
						},
						{
							"key": "clientSecret",
							"value": "C54081258696E282D2646A3AB276E793ADA3B73915C82B0B352FDCA0C8123049",
							"type": "string"
						},
						{
							"key": "tokenName",
							"value": "test-token",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://camunda2-dev-ed.my.salesforce.com/services/data/v52.0/sobjects/contact",
					"protocol": "https",
					"host": [
						"camunda2-dev-ed",
						"my",
						"salesforce",
						"com"
					],
					"path": [
						"services",
						"data",
						"v52.0",
						"sobjects",
						"contact"
					]
				}
			},
			"response": []
		},
		{
			"name": "salesforce oauth2 grant ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test response has a DamageKey\", function () {",
							"",
							"    var data = JSON.parse(responseBody);",
							"",
							"    // console.log(data)",
							"",
							"    //set the tasks into PM environment",
							"    pm.environment.set(\"token\", data.access_token);",
							"    ",
							"    console.log( \"Response: Access Token: \"",
							"                        +pm.environment.get(\"token\") );",
							"    ",
							"    // pm.response.to.have.jsonBody(\"damageKey\"); ",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://login.salesforce.com/services/oauth2/token?grant_type=password&client_id=3MVG9p1Q1BCe9GmA2i4VM2yUSqOZwtXNI7EjJpLAE6YVLn5UCrtU5XOk0FPz6CzDAUMZuuLLwjaV.hYtyGTHp&client_secret=C54081258696E282D2646A3AB276E793ADA3B73915C82B0B352FDCA0C8123049\n&username=paullungu@camunda.com&password=Budwe1ser0MJWiTaYkeotUS9jiP1pHY39",
					"protocol": "https",
					"host": [
						"login",
						"salesforce",
						"com"
					],
					"path": [
						"services",
						"oauth2",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "password"
						},
						{
							"key": "client_id",
							"value": "3MVG9p1Q1BCe9GmA2i4VM2yUSqOZwtXNI7EjJpLAE6YVLn5UCrtU5XOk0FPz6CzDAUMZuuLLwjaV.hYtyGTHp"
						},
						{
							"key": "client_secret",
							"value": "C54081258696E282D2646A3AB276E793ADA3B73915C82B0B352FDCA0C8123049\n"
						},
						{
							"key": "username",
							"value": "paullungu@camunda.com"
						},
						{
							"key": "password",
							"value": "Budwe1ser0MJWiTaYkeotUS9jiP1pHY39"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "salesforce GET objects",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://camunda2-dev-ed.my.salesforce.com/services/data/v52.0/sobjects/account/0015f000006KDVIAA4",
					"protocol": "https",
					"host": [
						"camunda2-dev-ed",
						"my",
						"salesforce",
						"com"
					],
					"path": [
						"services",
						"data",
						"v52.0",
						"sobjects",
						"account",
						"0015f000006KDVIAA4"
					]
				}
			},
			"response": []
		},
		{
			"name": "salesforce POST create object",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"SuppliedName\" : \"{{damageKey}}\",\n  \"Subject\" : \"Testing the integreation with Camunda\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://camunda2-dev-ed.my.salesforce.com/services/data/v52.0/sobjects/case",
					"protocol": "https",
					"host": [
						"camunda2-dev-ed",
						"my",
						"salesforce",
						"com"
					],
					"path": [
						"services",
						"data",
						"v52.0",
						"sobjects",
						"case"
					]
				}
			},
			"response": []
		},
		{
			"name": "salesforce PATCH update object",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer 00D5f000003JNgx!ARQAQKFwpZ.GljJPm2Wj2Dv5gDnGA2Y2aNtgYbcuy9XyXTPG5YdYhRVPJkgmSHDAS4jYTQUCgy3QuUdMAVr7hUOLfWG70CrA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"BillingCity\" : \"San Francisco\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://camunda2-dev-ed.my.salesforce.com/services/data/v52.0/sobjects/account/0015f0000081UCrAAM",
					"protocol": "https",
					"host": [
						"camunda2-dev-ed",
						"my",
						"salesforce",
						"com"
					],
					"path": [
						"services",
						"data",
						"v52.0",
						"sobjects",
						"account",
						"0015f0000081UCrAAM"
					]
				}
			},
			"response": []
		},
		{
			"name": "salesforce DELETE object",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer 00D5f000003JNgx!ARQAQKFwpZ.GljJPm2Wj2Dv5gDnGA2Y2aNtgYbcuy9XyXTPG5YdYhRVPJkgmSHDAS4jYTQUCgy3QuUdMAVr7hUOLfWG70CrA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"BillingCity\" : \"San Francisco\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://camunda2-dev-ed.my.salesforce.com/services/data/v52.0/sobjects/account/0015f0000081UCrAAM",
					"protocol": "https",
					"host": [
						"camunda2-dev-ed",
						"my",
						"salesforce",
						"com"
					],
					"path": [
						"services",
						"data",
						"v52.0",
						"sobjects",
						"account",
						"0015f0000081UCrAAM"
					]
				}
			},
			"response": []
		},
		{
			"name": "salesforce GET object",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://camunda2-dev-ed.my.salesforce.com/services/data/v52.0/sobjects/case/5005f000003aVeEAAU",
					"protocol": "https",
					"host": [
						"camunda2-dev-ed",
						"my",
						"salesforce",
						"com"
					],
					"path": [
						"services",
						"data",
						"v52.0",
						"sobjects",
						"case",
						"5005f000003aVeEAAU"
					]
				}
			},
			"response": []
		},
		{
			"name": "salesforce GET object fields",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer 00D5f000003JNgx!ARQAQKFwpZ.GljJPm2Wj2Dv5gDnGA2Y2aNtgYbcuy9XyXTPG5YdYhRVPJkgmSHDAS4jYTQUCgy3QuUdMAVr7hUOLfWG70CrA",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://camunda2-dev-ed.my.salesforce.com/services/data/v52.0/sobjects/account/0015f000006KDVIAA4?fields=AccountNumber,Name",
					"protocol": "https",
					"host": [
						"camunda2-dev-ed",
						"my",
						"salesforce",
						"com"
					],
					"path": [
						"services",
						"data",
						"v52.0",
						"sobjects",
						"account",
						"0015f000006KDVIAA4"
					],
					"query": [
						{
							"key": "fields",
							"value": "AccountNumber,Name"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "salesforce query account",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://camunda2-dev-ed.my.salesforce.com/services/data/v52.0/query?q=SELECT+Id,CaseNumber,Subject,SuppliedName+FROM+Case",
					"protocol": "https",
					"host": [
						"camunda2-dev-ed",
						"my",
						"salesforce",
						"com"
					],
					"path": [
						"services",
						"data",
						"v52.0",
						"query"
					],
					"query": [
						{
							"key": "q",
							"value": "SELECT+Id,CaseNumber,Subject,SuppliedName+FROM+Case"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Grant",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9000/api/grants",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"api",
						"grants"
					]
				}
			},
			"response": []
		}
	]
}